image: reactnativecommunity/react-native-android

variables:
  ADB_INSTALL_TIMEOUT: 20 # Timeout for ADB installation

before_script:
  # Install pnpm globally
  - npm install -g pnpm
  # Install dependencies
  - pnpm install
  - sdkmanager --update
  - apt-get update && apt-get install -y libc6 libstdc++6 libgcc1 libx11-6 libx11-xcb1 libxrender1 libxrandr2 mesa-utils libpulse0
  - apt-get install -y xvfb

stages:
  - android
  - build
  - test

android:
  stage: android
  tags:
    - android
  script:
    - echo "Setting up Android Emulator..."
    # Download and install the necessary Android SDK tools and emulator
    - sdkmanager --verbose "system-images;android-30;google_apis;x86_64"
    - sdkmanager --licenses
    - sdkmanager --verbose "platform-tools" "platforms;android-30"

    # create the android virtual device and see that it was made correctly
    - echo "no" | avdmanager create avd -n test_avd -k "system-images;android-30;google_apis;x86_64"
    - if [ $? -ne 0 ]; then echo "Error- Failed to create AVD."; exit 1; fi
    - avdmanager list avd

    # Start the emulator in headless mode
    - Xvfb :1 &
    - export DISPLAY=:1
    - nohup emulator -avd test_avd -no-snapshot -no-accel -no-audio -verbose > emulator.log 2>&1 &
    - tail -f emulator.log &

    # Wait for the emulator to boot
    - adb start-server
    - adb wait-for-device || (echo "Emulator failed to start"; exit 1)
    - adb shell input keyevent 82 # Unlock the emulator screen
    - echo "Emulator is ready!"
  artifacts:
    expire_in: 1 day
    when: always
    paths:
      - $ANDROID_HOME
      - emulator.log

build:
  stage: build
  tags: 
    - android
  script:
    - echo "Building..."
    - pnpm android
  artifacts:
    expire_in: 1 days
    when: on_success
    paths:
      - node_modules/

test:
  stage: test
  dependencies: 
    - android
    - build
  script: 
    - echo "Testing..."
    - pnpm test
  
  